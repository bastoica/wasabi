<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
https://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion> 
    <groupId>edu.uchicago.cs.systems</groupId>
	<artifactId>wasabi</artifactId>
	<description>Wasabi Fault Injection Instrumentation Library</description>
	<name>Wasabi Library</name>
    <version>1.0.0</version>
    <packaging>jar</packaging>
    
  	<properties>
      <aspectj.version>1.9.8.RC1</aspectj.version>
      <aspectj-maven.version>1.13.1</aspectj-maven.version>
      <csvFileName>./config/codeql_data.csv</csvFileName>
  	</properties>
    
	<dependencies>
    	<dependency>
    	  <groupId>org.aspectj</groupId>
    	  <artifactId>aspectjrt</artifactId>
	  <version>${aspectj.version}</version>
	</dependency>
    	<!--dependency>
    	  <groupId>org.aspectj</groupId>
    	  <artifactId>aspectjweaver</artifactId>
    	  <version>${aspectj.version}</version>
	</dependency-->
  	<dependency>
    	  <groupId>org.slf4j</groupId>
    	  <artifactId>slf4j-api</artifactId>
          <version>2.0.6</version>
        </dependency>
        <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
          <version>2.0.6</version>
        </dependency>
    	<dependency>
    	  <groupId>junit</groupId>
    	  <artifactId>junit</artifactId>
    	  <version>4.13.2</version>
    	  <scope>test</scope>
	</dependency>
	<dependency>
    	  <groupId>org.junit.jupiter</groupId>
    	  <artifactId>junit-jupiter-api</artifactId>
    	  <version>5.8.2</version>
    	  <scope>test</scope>
	</dependency>
    	<dependency>
      	  <groupId>org.assertj</groupId>
      	  <artifactId>assertj-core</artifactId>
	    <version>3.20.2</version>
    	  <scope>test</scope>
    	</dependency>
    </dependencies>

  <repositories>
    <!--
      Repeat Central definition from super POM https://maven.apache.org/ref/3.6.3/maven-model-builder/super-pom.html.
      Define it as the first repository to search at, otherwise Maven would always search any other repositories defined
      in the POM or in settings.xml first, slowing down the build, because most artifacts reside at Maven Central. See
      https://maven.apache.org/guides/mini/guide-multiple-repositories.html#repository-order for more details.
    -->
    <repository>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <enabled>true</enabled>
        <updatePolicy>never</updatePolicy>
      </releases>
    </repository>
    <repository>
      <id>ossrh-snapshots</id>
      <name>Sonatype OSSRH snapshots</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <layout>default</layout>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>

  <build>
    <resources>
      <resource>
        <directory>config</directory>
      </resource>
    </resources>
    
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <!-- Let the AspectJ compiler do the work -->
        <executions>
          <execution>
            <id>default-compile</id>
            <phase>none</phase>
          </execution>
          <execution>
            <id>default-testCompile</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>dev.aspectj</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <version>${aspectj-maven.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>test-compile</goal>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <showWeaveInfo>true</showWeaveInfo>
          <verbose>true</verbose>
          <source>11</source>
          <target>11</target>
          <encoding>UTF-8</encoding>
          <complianceLevel>11</complianceLevel>
          <enablePreview>false</enablePreview>
          <!--weaveDependencies>
            <weaveDependency>
              <groupId>org.aspectj</groupId>
              <artifactId>aspectjweaver</artifactId>
            </weaveDependency>
          </weaveDependencies-->
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>

</project>
